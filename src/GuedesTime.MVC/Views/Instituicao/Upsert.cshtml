@using GuedesTime.MVC.Models
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@model GuedesTime.MVC.ViewModels.InstituicaoViewModel

@{
    ViewData["Title"] = (Model.Id == null || Model.Id == Guid.Empty)
    ? "Cadastrar Instituição"
    : "Editar Instituição";
}

<h1>@ViewData["Title"]</h1>
<hr />

<form asp-action="Upsert" method="post">
    <input type="hidden" asp-for="Id" />
    <vc:Summary></vc:Summary>

    <div class="form-group">
        <label asp-for="Nome" class="control-label"></label>
        <input asp-for="Nome" class="form-control" id="Nome" />
        <span asp-validation-for="Nome" class="text-danger"></span>
        <span id="name-error" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="CodigoCie" class="control-label"></label>
        <input asp-for="CodigoCie" class="form-control" />
        <span asp-validation-for="CodigoCie" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Cnpj" class="control-label"></label>
        <input asp-for="Cnpj" class="form-control" id="Cnpj" />
        <span asp-validation-for="Cnpj" class="text-danger"></span>
        <span id="cnpj-error" class="text-danger"></span>
    </div>

    @if (Model.Id != null && Model.Id != Guid.Empty)
    {
        <div class="form-group">
            <label class="form-label">Status</label>
            <div class="form-check form-switch">
                <input class="form-check-input" type="checkbox" id="AtivoSwitch"
                       name="Ativo" value="true" @(Model.Ativo == true ? "checked" : "")>
            </div>
            <span asp-validation-for="Ativo" class="text-danger"></span>
        </div>
    }

    <h4>
        Endereço
        <button type="button" class="btn-toggle" onclick="toggleSection('endereco-container', this)">
            <i class="fas fa-chevron-down"></i>
        </button>
    </h4>
    <hr />

    <div id="endereco-container" style="display: block;">
        <partial name="_Endereco" />
    </div>

    <div class="button-container">
        <button type="submit" class="btn-custom">
            <i class="fas fa-save"></i> @((Model.Id == null || Model.Id == Guid.Empty) ? "Cadastrar" : "Atualizar")
        </button>
        <button type="button" class="btn-custom" onclick="window.location.href='/Instituicao'">
            <i class="fas fa-arrow-left"></i> Voltar
        </button>
    </div>
</form>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.min.js"></script>

    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        $(document).ready(function () {
            $("#Cnpj").mask("00.000.000/0000-00");

            $("#Nome").on("input", function () {
                var nameField = $(this);
                var nameError = $("#name-error");
                var nameValue = nameField.val();

                var regex = /^[A-Za-zÀ-ÖØ-öø-ÿ. ]*$/;

                if (!regex.test(nameValue)) {
                    nameError.text("O nome só pode conter letras e ponto.");
                    nameField.val(nameValue.replace(/[^A-Za-zÀ-ÖØ-öø-ÿ. ]/g, ""));
                    return;
                }

                var correctedName = nameValue
                    .toLowerCase()
                    .replace(/(^|[\s.])([a-zà-öø-ÿ])/g, function (_, sep, char) {
                        return sep + char.toUpperCase();
                    });


                nameField.val(correctedName);
                nameError.text("");
            });

            $("#Cnpj").on("input", function () {
                const cnpjValue = $(this).val().replace(/\D/g, "");
                const cnpjError = $("#cnpj-error");

                if (cnpjValue.length === 0) {
                    cnpjError.text("");
                    return;
                }

                if (cnpjValue.length < 14) {
                    cnpjError.text("CNPJ incompleto.");
                    return;
                }

                if (!validarCNPJ(cnpjValue)) {
                    cnpjError.text("CNPJ inválido.");
                } else {
                    cnpjError.text("");
                }
            });

            $("form").on("submit", function (e) {
                const cnpjField = $("#Cnpj");
                const cnpjValue = cnpjField.val().replace(/\D/g, "");
                const cnpjError = $("#cnpj-error");

                if (cnpjValue.length > 0 && (!validarCNPJ(cnpjValue) || cnpjValue.length !== 14)) {
                    e.preventDefault();
                    cnpjError.text("CNPJ inválido.");
                    cnpjField.focus();
                } else {
                    cnpjError.text("");
                }
            });

            function validarCNPJ(cnpj) {
                if (cnpj.length !== 14 || /^(\d)\1{13}$/.test(cnpj)) return false;

                let tamanho = cnpj.length - 2;
                let numeros = cnpj.substring(0, tamanho);
                let digitos = cnpj.substring(tamanho);
                let soma = 0;
                let pos = tamanho - 7;

                for (let i = tamanho; i >= 1; i--) {
                    soma += numeros.charAt(tamanho - i) * pos--;
                    if (pos < 2) pos = 9;
                }

                let resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
                if (resultado != digitos.charAt(0)) return false;

                tamanho++;
                numeros = cnpj.substring(0, tamanho);
                soma = 0;
                pos = tamanho - 7;

                for (let i = tamanho; i >= 1; i--) {
                    soma += numeros.charAt(tamanho - i) * pos--;
                    if (pos < 2) pos = 9;
                }

                resultado = soma % 11 < 2 ? 0 : 11 - soma % 11;
                return resultado == digitos.charAt(1);
            }

            BuscaCep();
        });
    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const toggle = document.getElementById("AtivoSwitch");
            const label = document.getElementById("switchLabel");

            if (toggle && label) {
                toggle.addEventListener("change", function () {
                    label.innerText = this.checked ? "Ligado" : "Desligado";
                });
            }
        });
    </script>
}
